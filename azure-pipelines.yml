trigger:
- master

variables:
  npm_config_cache: $(Pipeline.Workspace)/.npm

stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: UseNode@1
      inputs:
        version: '12.x'
      displayName: 'Install Node.js 12.x'

    - task: Cache@2
      inputs:
        key: 'npm | "$(Agent.OS)" | package-lock.json'
        restoreKeys: |
           npm | "$(Agent.OS)"
           npm
        path: $(npm_config_cache)
      displayName: Cache npm

    - script: |
        npm ci
        npm run build -- --dest dist
      displayName: 'npm ci and build'

    - publish: dist
      artifact: site
      displayName: 'Publish artifact'

- stage: Deploy
  dependsOn:
  - Build
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  jobs:
  - deployment: Deploy
    pool:
      vmImage: 'ubuntu-latest'
    environment: production
    strategy:
      runOnce:
        deploy:
          steps:
            - script: |
                wget https://aka.ms/downloadazcopy-v10-linux
                tar -xvf downloadazcopy-v10-linux
                cp ./azcopy_linux_amd64_*/azcopy ./
              displayName: 'Install AzCopy v10'
            
            - task: AzureCLI@1
              inputs:
                azureSubscription: 'Azure Sponsorship'
                scriptLocation: 'inlineScript'
                inlineScript: |
                  ip=$(curl -s https://ipinfo.io/json | jq -r .ip)
                  az storage account network-rule add --account-name $1 --ip-address $ip
                  az storage account network-rule list --account-name $1
                  end=$(date -d "5 minutes" '+%Y-%m-%dT%H:%M:%SZ')
                  sas=$(az storage container generate-sas -n '$web' --account-name $1 --https-only --permissions dlrw --expiry $end -otsv)
                  ./azcopy sync "$(Pipeline.Workspace)/site/" "https://$1.blob.core.windows.net/\$web?$sas" --recursive --delete-destination=true
                  az storage account network-rule remove --account-name $1 --ip-address $ip
                arguments: 'daruyanagi1'
              displayName: 'Sync to Storage'

            - task: AzureCLI@1
              inputs:
                azureSubscription: 'Azure Sponsorship'
                scriptLocation: 'inlineScript'
                inlineScript: |
                  az cdn endpoint purge -g DaruTest-RG -n static-daruyanagi --profile-name daruyanagi --content-paths '/*' --no-wait
                arguments: 'daruyanagi1'
              displayName: 'Purge CDN Cache'